name: Release

on:
  push:
    tags:
      - 'v*.*'  # triggers on tags like v0.1, v0.2

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model (full)
        run: |
          python train.py  # Train full model and save artifacts/metrics

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/diabetes-triage:${{ github.ref_name }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/diabetes-triage:${{ github.ref_name }}

      - name: Run container smoke test
        run: |
          docker run --rm -p 8000:8000 ghcr.io/${{ github.repository_owner }}/diabetes-triage:${{ github.ref_name }} &
          sleep 10  # wait for container to start
          curl -f http://localhost:8000/health
          curl -X POST http://localhost:8000/predict -H "Content-Type: application/json" -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}'

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Release ${{ github.ref_name }}

            - Model RMSE: $(cat metrics.json | jq '.rmse')  # example to include metrics
            - Changelog: See CHANGELOG.md

      - name: Upload metrics as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: metrics.json
          asset_name: metrics.json
          asset_content_type: application/json
