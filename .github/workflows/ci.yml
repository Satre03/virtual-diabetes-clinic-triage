name: CI Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

permissions:
  contents: read
  packages: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest 
          
      - name: Train model (quick check)
        run: python src/train.py
        
      - name: Run unit tests
        run: PYTHONPATH=$(pwd) pytest -q

      - name: Show metrics
        run: |
          echo "=== metrics.json ==="
          cat artifacts/metrics.json || true
          echo "=== meta.json ==="
          cat artifacts/meta.json || true

      - name: Build Docker image
        run: docker build -t diabetes-api .

      - name: Smoke test container
        run: |
          set -e
          cid=$(docker run -d -p 8000:8000 -e ALLOW_DUMMY_MODEL=1 diabetes-api)
          echo "Started container: $cid"
          for i in $(seq 1 30); do
            if curl -fsS http://localhost:8000/health > /dev/null; then
              echo "âœ… Health OK"
              break
            fi
            echo "Waiting for health... ($i/30)"
            sleep 1
          done
          echo "--- /health ---"
          curl -fsS http://localhost:8000/health | jq .
          echo "--- /predict ---"
          curl -fsS -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}' \
            | jq .
          docker stop "$cid" >/dev/null
