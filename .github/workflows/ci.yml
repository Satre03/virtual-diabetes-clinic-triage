name: CI Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

permissions:
  contents: read
  packages: write

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      REPO_LC: ${{ github.repository }} # will be lowercased in shell

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Test (install, train, unit tests)
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt pytest
          python src/train-v0.2.py
          PYTHONPATH=$(pwd) pytest -q

      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: |
            artifacts/model.joblib
            artifacts/meta.json
          retention-days: 30
          if-no-files-found: error

      - name: Compute image name and tags
        id: tags
        shell: bash
        run: |
          set -euo pipefail
          REPO_LC=$(echo "${REPO_LC}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${REPO_LC}"
          TAGS="${IMAGE}:${GITHUB_REF_NAME} ${IMAGE}:${GITHUB_SHA}"
          echo "TAGS=${TAGS}" >> "$GITHUB_ENV"
          echo "IMAGE=${IMAGE}" >> "$GITHUB_ENV"
          echo "Tags: $TAGS"

      - name: Build Docker image
        run: |
          set -euo pipefail
          # shellcheck disable=SC2086
          docker build $(for t in $TAGS; do printf -- '-t %s ' "$t"; done) .

      - name: Smoke test
        shell: bash
        run: |
          set -euo pipefail
          IMAGE_TAG=$(echo "$TAGS" | awk '{print $1}') # first tag
          CID=ci-smoke
          docker run -d --name "$CID" -p 8000:8000 "$IMAGE_TAG"
          trap 'docker logs "$CID" || true; docker rm -f "$CID" || true' EXIT
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/health >/dev/null; then
              echo "Healthcheck OK"
              exit 0
            fi
            sleep 1
          done
          echo "Healthcheck failed"
          exit 1

      - name: Log in to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image(s)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          set -euo pipefail
          for tag in $TAGS; do
            docker push "$tag"
          done
