name: CI Pipeline

on:
  push:
    branches: [ "**" ]         # Run on all branches
    tags:     [ "v*" ]         # Also run on version tags like v0.1, v0.2
  pull_request:
    branches: [ "**" ]         # Run on all PRs for any branch

permissions:
  contents: read
  packages: write

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      REPO_LC: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Test (install, train, unit tests)
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt pytest
          python src/train.py
          PYTHONPATH=$(pwd) pytest -q

      - name: Set image name and tag
        id: vars
        run: |
          REPO=$(echo "${REPO_LC}" | tr '[:upper:]' '[:lower:]')
          echo "repo=ghcr.io/${REPO}" >> $GITHUB_OUTPUT

          # Determine if this is a tag or branch
          REF_TYPE="${GITHUB_REF_TYPE:-}"
          REF_NAME="${GITHUB_REF_NAME:-}"
          SHORT_SHA="${GITHUB_SHA::7}"

          if [[ "$REF_TYPE" == "tag" ]]; then
            # Use tag name directly
            TAG="$REF_NAME"
          else
            # Use branchname-sha for uniqueness
            TAG="${REF_NAME}-${SHORT_SHA}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }} .

      - name: Smoke test
        shell: bash
        run: |
          set -euo pipefail
          IMAGE="${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }}"
          CID=ci-smoke
          docker run -d --name "$CID" -p 8000:8000 "$IMAGE"
          trap 'docker logs "$CID" || true; docker rm -f "$CID" || true' EXIT
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/health >/dev/null; then
              echo "Healthcheck OK"
              exit 0
            fi
            sleep 1
          done
          echo "Healthcheck failed"
          exit 1

      - name: Log in to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }}
