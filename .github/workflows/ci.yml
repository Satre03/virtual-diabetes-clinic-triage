name: CI Pipeline

on:
  push:
    branches: [ "main", "ite2" ]
  pull_request:
    branches: [ "main", "ite2" ]

permissions:
  contents: read
  packages: write

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      REPO_LC: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set image name and tag from training filename
        id: vars
        shell: bash
        run: |
          set -e
          REPO="${REPO_LC,,}"
          TRAIN_FILE=$(ls -1 src/train-v*.py | sort -V | tail -n1)
          TAG=$(echo "$TRAIN_FILE" | grep -oE 'v[0-9]+(\.[0-9]+)*' || true)
          if [ -z "$TAG" ]; then TAG="${GITHUB_SHA::7}"; fi
          echo "train_file=$TRAIN_FILE" >> "$GITHUB_OUTPUT"
          echo "repo=ghcr.io/${REPO}" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Install deps, train, and test
        shell: bash
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt pytest
          python "${{ steps.vars.outputs.train_file }}"
          PYTHONPATH=$(pwd) pytest -q

      - name: Build Docker image
        run: docker build -t ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }} .

      - name: Log in to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }}
